/* CSS Media queries - Video 1*/

/* Media queries are an essential component of responsive web design. Think of them as JavaScript conditionals for CSS.*/

/* Media queries allow developers to define styling based on viewport width, device orientation, and various other media attributes.*/

.header-image {
    float: left;
    width: 300px;
    margin-right: 10px;
}

p {
    font-family: Calibri, Arial, Helvetica, sans-serif;
}

/* A media query is defined using at media (@media), the type of media we want to affect, which in this case will be screen, and the followed by and then a condition that we want to apply.*/

/* First media query applies the condition max-width 400px. Then we can define a block using curly brackets and define the CSS rules that we want applied when the screen width is 400 pixels or smaller -> @media screen and (max-width: 400px) */

/* Second media query -> the result is more obvious than using 400px*/

@media screen and (max-width: 600px) {
    .header-image {
        /* display changed to block, default setting was inline-block */
        display: block;
        float: none;
        /* Center an image setting, define auto for both sides */
        margin-left: auto;
        margin-right: auto;
    }
}

/* Test the page by reloading the page and then resizing */

/* Let's try another media query for when the 'width is larger, to do that use 'min-width in order to define a minimun with the query should be applied on */

@media screen and (min-width: 700px) {
    /* Now let's add a CSS rule that makes the image a little larger for 'desktops'. When we go above the defined width, the image becomes larger */
    /* If you're having trouble making your browser larger than the defined number of pixels, try adjusting the minimun width. */
    .header-image {
        width: 500px;
    }
}

/* We can do media queries for different types of media. One common media type is 'print' used when taking a web page and printing it in the browser. 
You can use a media query to hide images when printing a page. This is usually common because images can sometimes waste printer ink and provide little value to the user.*/

/* Let's define a media query with the media type 'print'. We're going to use body image just so that we're very specific, and it does apply to all the images on the page.*/

/* Test it out by going to the browser menu, and go to print. In the print preview doesn't show any images thanks to this media query. */

@media print {
    body img {
        /* This setting will hide the element */
        display: none;
    }
} 

/*  Media queries are a powerful way to make websites responsive under various conditions, all without using JavaScript. */